name: "on_pull_request_ci"

on:
  pull_request:

jobs:
  get_changes:
    runs-on: ubuntu-latest
    outputs:
      any_python_file: ${{ steps.changes.outputs.any_python_file }}
      eshop: ${{ steps.changes.outputs.eshop }}
      dependency_versions: ${{ steps.changes.outputs.dependency_versions }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            any_python_file:
              - '**/*.py'
            eshop:
              - 'eshop/**'
            dependency_versions:
              - 'requirements/prod.txt'
            basket_migrations_files:
              - 'eshop/apps/basket/basket/migrations/**/*.py'

  run_print_changes:
    needs: get_changes
    runs-on: ubuntu-latest
    steps:
      - name: print is changed
        run: echo ${{ needs.get_changes.outputs.basket_migrations_files == 'true' }}

  run_flake8_linter:
    needs: get_changes
    runs-on: ubuntu-latest
    if: ${{ needs.get_changes.outputs.any_python_file == 'true' }}
    steps:
      - name: checkout to repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: setup linter
        run: pip install -r deploy/ci/linter/flake8_requirements.txt

      - name: run linter
        run: flake8 --config=setup.cfg $(git diff origin/${{ github.event.pull_request.base.ref }} --name-only --diff-filter=d | grep -E '.+\.py$')

  run_import_linter:
    needs: get_changes
    runs-on: ubuntu-latest
    if: ${{ needs.get_changes.outputs.any_python_file == 'true' }}
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image for tests
        uses: docker/build-push-action@v5
        with:
          load: true
          push: false
          target: build_for_running_import_linter
          tags: web_app:import_linter
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run import-linter
        uses: addnab/docker-run-action@v3
        with:
          image: web_app:import_linter
          run: lint-imports --config=setup.cfg

  run_tests:
    needs: get_changes
    runs-on: ubuntu-latest
    if: ${{ needs.get_changes.outputs.eshop == 'true' || needs.get_changes.outputs.dependency_versions == 'true' }}
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image for tests
        uses: docker/build-push-action@v5
        with:
          load: true
          push: false
          target: build_for_run_pytest
          tags: web_app:tests
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run pytest_contract_usage
        uses: addnab/docker-run-action@v3
        with:
          image: web_app:tests
          run: pytest -c pytest.ini -m cqrs_contract_usage

      - name: Run pytest
        uses: addnab/docker-run-action@v3
        with:
          image: web_app:tests
          run: pytest -c pytest.ini -m "not cqrs_contract_usage"
