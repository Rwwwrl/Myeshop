name: "eshop ci"

on:
  pull_request:
  push:
    branches: ["main"]

jobs:
  run_flake8_linter:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: checkout to repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: setup linter
        run: pip install -r deploy/ci/linter/flake8_requirements.txt
      - name: run linter
        run: flake8 --config=setup.cfg $(git diff origin/${{ github.event.pull_request.base.ref }} --name-only --diff-filter=d | grep -E '.+\.py$')

  run_tests:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image for tests
        uses: docker/build-push-action@v5
        with:
          load: true
          push: false
          target: build_for_run_pytest
          tags: web_app:tests

      - name: Run pytest_contract_usage
        uses: addnab/docker-run-action@v3
        with:
          image: web_app:tests
          run: pytest -c pytest.ini -m cqrs_contract_usage

      - name: Run pytest
        uses: addnab/docker-run-action@v3
        with:
          image: web_app:tests
          run: pytest -c pytest.ini -m "not cqrs_contract_usage"

  build_and_push_to_dockerhub:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    env:
      TARGET_BRANCH_NAME: main
      LAST_GIT_COMMIT_SHA: ${{ github.event.head_commit.id }}

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACESS_TOKEN_FOR_CI_CD }}

      - name: Build and push to docker hub web app
        uses: docker/build-push-action@v5
        with:
          push: true
          target: build_for_prod
          tags: >
            rwwwrl/myeshop_web_app:${{ env.TARGET_BRANCH_NAME }}_${{ env.LAST_GIT_COMMIT_SHA }} ,
            rwwwrl/myeshop_web_app:${{ env.TARGET_BRANCH_NAME }}_latest

      - name: Build and push to docker hub prometheus
        uses: docker/build-push-action@v5
        with:
          context: "{{ defaultContext }}:deploy/prometheus"
          push: true
          tags: rwwwrl/myeshop_prometheus:${{ env.TARGET_BRANCH_NAME }}_latest
