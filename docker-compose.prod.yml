version: "3.9"

services:
  web_app:
    image: rwwwrl/myeshop_web_app:main_latest
    command: python deploy/uvicorn/uvicorn_run.py
    environment:
      - DB_HOST=postgres_db
      - DB_NAME=${DB_NAME}
      - DB_USER_LOGIN=${DB_USER_LOGIN}
      - DB_USER_PASSWORD=${DB_USER_PASSWORD}
      - USER_IDENTITY_SERVICE_SECRET=${USER_IDENTITY_SERVICE_SECRET}
    container_name: myeshop_web_app
    volumes:
      - uvicorn_socket_folder:/usr/uvicorn_socket_folder
    depends_on:
      postgres_db:
        condition: service_healthy

  nginx:
    build: rwwwrl/myeshop_nginx:main_latest
    container_name: nginx_container
    volumes:
      - uvicorn_socket_folder:/usr/uvicorn_socket_folder
    ports:
      - 80:80
    depends_on:
      - web_app

  postgres_db:
    image: postgres:14
    container_name: postgres_db_prod
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER_LOGIN}
      - POSTGRES_PASSWORD=${DB_USER_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_db_data_prod:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER_LOGIN}" ]
      interval: 1s
      timeout: 3s
      retries: 30

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    ports:
      - 9100:9100
    command:
      - '--path.rootfs=/host'
    volumes:
      - '/:/host:ro,rslave'

  prometheus:
    image: rwwwrl/myeshop_prometheus:main_latest
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - prometheus_data:/prometheus

  grafana:
    image: grafana/grafana-enterprise
    ports:
      - 3000:3000
    container_name: grafana_container
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  postgres_db_data_prod:
  prometheus_data:
  grafana_data:
  uvicorn_socket_folder:
