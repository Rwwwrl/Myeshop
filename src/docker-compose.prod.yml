version: "3.9"

services:
  web_app:
    build:
      context: .
      dockerfile: Dockerfile
      target: build
    command: gunicorn --chdir eshop eshop.wsgi -b 0.0.0.0:80 --access-logfile=-
    image: app_build_to_run_server
    ports:
      - 80:80
    depends_on:
      postgres_db:
        condition: service_healthy

  postgres_db:
    image: postgres:14
    container_name: postgres_db
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER_LOGIN}
      - POSTGRES_PASSWORD=${POSTGRES_USER_PASSWORD}
      - POSTGRES_DB=myeshop
    volumes:
      - postgres_db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 1s
      timeout: 3s
      retries: 30

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    ports:
      - 9100:9100
    command:
      - '--path.rootfs=/host'
    volumes:
      - '/:/host:ro,rslave'

  prometheus:
    build:
      context: deploy/prometheus/
      dockerfile: Dockerfile
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - prometheus_data:/prometheus

volumes:
  postgres_db_data:
  prometheus_data:
